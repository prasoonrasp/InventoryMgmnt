//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DAL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ProductInventoryEntities : DbContext
    {
        public ProductInventoryEntities()
            : base("name=ProductInventoryEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Product> Products { get; set; }
    
        public virtual ObjectResult<Get_Product_By_ID_Result> Get_Product_By_ID(string productID)
        {
            var productIDParameter = productID != null ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_Product_By_ID_Result>("Get_Product_By_ID", productIDParameter);
        }
    
        public virtual ObjectResult<Get_Products_Result> Get_Products()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_Products_Result>("Get_Products");
        }
    
        public virtual ObjectResult<Nullable<bool>> INSERT_Product(string productName, string category, string description, string stock, ObjectParameter isSuccess)
        {
            var productNameParameter = productName != null ?
                new ObjectParameter("ProductName", productName) :
                new ObjectParameter("ProductName", typeof(string));
    
            var categoryParameter = category != null ?
                new ObjectParameter("Category", category) :
                new ObjectParameter("Category", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var stockParameter = stock != null ?
                new ObjectParameter("Stock", stock) :
                new ObjectParameter("Stock", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("INSERT_Product", productNameParameter, categoryParameter, descriptionParameter, stockParameter, isSuccess);
        }
    
        public virtual ObjectResult<Nullable<bool>> Update_Product(string productID, string productName, string category, string description, string stock, ObjectParameter isSuccess)
        {
            var productIDParameter = productID != null ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(string));
    
            var productNameParameter = productName != null ?
                new ObjectParameter("ProductName", productName) :
                new ObjectParameter("ProductName", typeof(string));
    
            var categoryParameter = category != null ?
                new ObjectParameter("Category", category) :
                new ObjectParameter("Category", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var stockParameter = stock != null ?
                new ObjectParameter("Stock", stock) :
                new ObjectParameter("Stock", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("Update_Product", productIDParameter, productNameParameter, categoryParameter, descriptionParameter, stockParameter, isSuccess);
        }
    }
}
